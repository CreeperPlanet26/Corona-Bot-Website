{"version":3,"sources":["components/card.tsx","components/listBox.tsx","components/navBar.tsx","components/searchBar.tsx","App.tsx","index.tsx"],"names":["CardComponent","countryData","worldData","colorTheme","Card","className","text","bg","style","width","position","top","left","Header","Body","Title","color","cases","ProgressBar","now","parseInt","todayCases","deaths","todayDeaths","recovered","totalTests","ListBox","onFetch","allCountries","useState","setValue","CustomMenu","React","forwardRef","ref","children","onClick","e","preventDefault","labeledBy","value","backgroundColor","aria-labelledby","FormControl","undefined","autoFocus","placeholder","onChange","target","Children","toArray","filter","child","props","toLowerCase","startsWith","Dropdown","Toggle","height","variant","id","Menu","as","map","Item","i","s","country","NavBar","onThemeChange","show","setShow","handleClose","Navbar","Brand","Form","inline","Button","ControlOutlined","console","log","fontSize","right","Tooltip","title","defaultChecked","checkedChildren","unCheckedChildren","on","Modal","onHide","backdrop","keyboard","closeButton","Footer","SearchBar","setSearchQuery","Group","Control","size","type","App","setCountryData","setWorldData","setAllCountries","theme","setTheme","document","body","fetchAllCountries","a","fetch","responce","json","allCountriesJSON","useEffect","fetchWorldData","fetchData","searchQuery","parsed","replace","countryDataJSON","worldDataJSON","sliderTheme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1d9fab5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CardProps from \"../interfaces/cardProps\";\r\nimport { Card, ProgressBar } from \"react-bootstrap\";\r\n\r\nconst CardComponent: React.FC<CardProps> = ({\r\n  countryData,\r\n  worldData,\r\n  colorTheme,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Card\r\n        className=\"hover-test\"\r\n        text=\"white\"\r\n        bg=\"warning\"\r\n        style={{ width: \"18rem\", position: \"fixed\", top: 200, left: 550 }}\r\n      >\r\n        <Card.Header>Cases</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h5\r\n              style={\r\n                colorTheme === \"dark\" ? { color: \"white\" } : { color: \"black\" }\r\n              }\r\n            >\r\n              Cases: {countryData.cases}\r\n            </h5>\r\n            <ProgressBar\r\n              now={\r\n                //@ts-ignore\r\n                (parseInt(countryData.cases) / parseInt(worldData.cases)) * 300\r\n              }\r\n            />\r\n            <h5\r\n              style={\r\n                colorTheme === \"dark\" ? { color: \"white\" } : { color: \"black\" }\r\n              }\r\n            >\r\n              {\" \"}\r\n              Today: {countryData.todayCases}\r\n            </h5>\r\n            <ProgressBar\r\n              now={\r\n                //@ts-ignore\r\n                (parseInt(countryData.todayCases) /\r\n                  //@ts-ignore\r\n                  parseInt(worldData.todayCases)) *\r\n                300\r\n              }\r\n            />\r\n          </Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <Card\r\n        className=\"hover-test\"\r\n        text=\"white\"\r\n        bg=\"danger\"\r\n        style={{ width: \"18rem\", position: \"fixed\", top: 200, left: 850 }}\r\n      >\r\n        <Card.Header>Deaths</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h5\r\n              style={\r\n                colorTheme === \"dark\" ? { color: \"white\" } : { color: \"black\" }\r\n              }\r\n            >\r\n              {\" \"}\r\n              Deaths: {countryData.deaths}\r\n            </h5>\r\n            <ProgressBar\r\n              now={\r\n                //@ts-ignore\r\n                (parseInt(countryData.deaths) / parseInt(worldData.deaths)) *\r\n                300\r\n              }\r\n            />\r\n            <h5\r\n              style={\r\n                colorTheme === \"dark\" ? { color: \"white\" } : { color: \"black\" }\r\n              }\r\n            >\r\n              {\" \"}\r\n              Today: {countryData.todayDeaths}\r\n            </h5>\r\n            <ProgressBar\r\n              now={\r\n                //@ts-ignore\r\n                (parseInt(countryData.todayDeaths) /\r\n                  //@ts-ignore\r\n                  parseInt(worldData.todayDeaths)) *\r\n                300\r\n              }\r\n            />\r\n          </Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card\r\n        className=\"hover-test\"\r\n        text=\"white\"\r\n        bg=\"success\"\r\n        style={{ width: \"18rem\", position: \"fixed\", top: 200, left: 1150 }}\r\n      >\r\n        <Card.Header>Misc</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h5\r\n              style={\r\n                colorTheme === \"dark\" ? { color: \"white\" } : { color: \"black\" }\r\n              }\r\n            >\r\n              Recovered: {countryData.recovered}\r\n            </h5>\r\n            <ProgressBar\r\n              now={\r\n                //@ts-ignore\r\n                (parseInt(countryData.recovered) /\r\n                  //@ts-ignore\r\n                  parseInt(worldData.recovered)) *\r\n                300\r\n              }\r\n            />\r\n\r\n            <h5\r\n              style={\r\n                colorTheme === \"dark\" ? { color: \"white\" } : { color: \"black\" }\r\n              }\r\n            >\r\n              Tests: {countryData.totalTests}\r\n            </h5>\r\n            <ProgressBar\r\n              now={\r\n                //@ts-ignore\r\n                (parseInt(countryData.recovered) /\r\n                  //@ts-ignore\r\n                  parseInt(worldData.recovered)) *\r\n                300\r\n              }\r\n            />\r\n          </Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport { Dropdown, FormControl } from \"react-bootstrap\";\r\nimport ListBoxProps from \"../interfaces/ListBoxProps\";\r\n\r\nconst ListBox: React.FC<ListBoxProps> = ({\r\n  onFetch,\r\n  allCountries,\r\n  colorTheme,\r\n}) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const CustomToggle = React.forwardRef(\r\n    //@ts-ignore\r\n    ({ children, onClick }, ref) => (\r\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n      <a\r\n        //@ts-ignore\r\n        ref={ref}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          onClick(e);\r\n        }}\r\n      >\r\n        {children}\r\n        &#x25bc;\r\n      </a>\r\n    )\r\n  );\r\n\r\n  const CustomMenu = React.forwardRef(\r\n    //@ts-ignore\r\n    ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const [value, setValue] = useState(\"\");\r\n\r\n      return (\r\n        <div\r\n          //@ts-ignore\r\n          ref={ref}\r\n          style={\r\n            colorTheme === \"light\"\r\n              ? { ...style, backgroundColor: \"#212529\" }\r\n              : style\r\n          }\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            style={\r\n              colorTheme === \"light\"\r\n                ? { backgroundColor: \"#212529\" }\r\n                : undefined\r\n            }\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul\r\n            className=\"list-unstyled\"\r\n            style={\r\n              colorTheme === \"light\"\r\n                ? { backgroundColor: \"#212529\" }\r\n                : { backgroundColor: \"white\" }\r\n            }\r\n          >\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                //@ts-ignore\r\n                !value || child.props.children.toLowerCase().startsWith(value)\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle\r\n        style={{\r\n          width: \"13rem\",\r\n          height: \"3rem\",\r\n          position: \"fixed\",\r\n          top: 450,\r\n          left: 320,\r\n        }}\r\n        variant=\"primary\"\r\n        id=\"dropdown-basic\"\r\n      >\r\n        Select a Country\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu as={CustomMenu}>\r\n        {allCountries.map((e) => (\r\n          <Dropdown.Item\r\n            style={\r\n              colorTheme === \"light\"\r\n                ? { backgroundColor: \"#212529\", color: \"white\" }\r\n                : { backgroundColor: \"white\", color: \"black\" }\r\n            }\r\n            onClick={(i: any) => {\r\n              setValue((s) => (s = i.target.id));\r\n              onFetch(i.target.id);\r\n            }}\r\n            id={e.country}\r\n          >\r\n            {e.country}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ListBox;\r\n","import React, { useState } from \"react\";\r\nimport { Navbar, Form, Button, Modal } from \"react-bootstrap\";\r\nimport { ControlOutlined } from \"@ant-design/icons\";\r\nimport { Switch } from \"antd\";\r\nimport { NavBarProps } from \"../interfaces/navBarProps\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst NavBar: React.FC<NavBarProps> = ({ onThemeChange, colorTheme }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg={colorTheme === \"dark\" ? \"light\" : \"dark\"}\r\n        variant={colorTheme === \"dark\" ? \"light\" : \"dark\"}\r\n      >\r\n        <Navbar.Brand> Corona Bot</Navbar.Brand>\r\n\r\n        <Form inline>\r\n          <Button variant=\"primary\" onClick={handleShow}>\r\n            Help\r\n          </Button>\r\n\r\n          <ControlOutlined\r\n            className=\"test\"\r\n            onClick={() => console.log(\"icon was clicked\")}\r\n            style={\r\n              colorTheme === \"dark\"\r\n                ? {\r\n                    color: \"black\",\r\n                    fontSize: \"2.5rem\",\r\n                    position: \"fixed\",\r\n                    right: 235,\r\n                  }\r\n                : {\r\n                    color: \"white\",\r\n                    fontSize: \"2.5rem\",\r\n                    position: \"fixed\",\r\n                    right: 235,\r\n                  }\r\n            }\r\n          />\r\n          <Tooltip title=\"Toogle Theme\">\r\n            <Switch\r\n              defaultChecked\r\n              checkedChildren=\"Dark\"\r\n              unCheckedChildren=\"Light\"\r\n              style={{\r\n                height: \"1.5rem\",\r\n                position: \"fixed\",\r\n                right: 175,\r\n              }}\r\n              onChange={(on) => {\r\n                if (on) onThemeChange(\"dark\");\r\n                if (!on) onThemeChange(\"light\");\r\n              }}\r\n            />\r\n          </Tooltip>\r\n          <Modal\r\n            style={{\r\n              width: \"40rem\",\r\n              height: \"40rem\",\r\n              position: \"fixed\",\r\n              top: 200,\r\n              left: 645,\r\n            }}\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>How To Use</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              Use the search bar to enter a country name or you can use the\r\n              Country button dropdown to select a country from the list.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Form>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport SearchBarProps from \"../interfaces/SearchBarProps\";\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = ({ onFetch }) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Form style={{ width: \"56rem\", position: \"fixed\", top: 450, left: 550 }}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            // onKeyPress = {e => {\r\n            //   if(e.key === 13) {\r\n            //     this.setState({ searchQuery: e.target.value});\r\n            //     this.props.onFetch(e.target.value);\r\n            //     console.log('asdf')\r\n            //   }}\r\n            // }\r\n            onChange={(e) => {\r\n              setSearchQuery(e.target.value);\r\n              onFetch(e.target.value);\r\n            }}\r\n            size=\"lg\"\r\n            type=\"text\"\r\n            placeholder=\"Country\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import fetch from \"node-fetch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport CardComponent from \"./components/card\";\r\nimport ListBox from \"./components/listBox\";\r\nimport NavBar from \"./components/navBar\";\r\nimport SearchBar from \"./components/searchBar\";\r\nimport CountryDataType from \"./interfaces/countryData\";\r\nimport { colorThemeType } from \"./interfaces/colorTheme\";\r\n\r\nconst App: React.FC = () => {\r\n  const [countryData, setCountryData] = useState<CountryDataType>({});\r\n\r\n  const [worldData, setWorldData] = useState<CountryDataType>({});\r\n  const [allCountries, setAllCountries] = useState<Array<CountryDataType>>([]);\r\n  const [theme, setTheme] = useState<colorThemeType>(\"dark\");\r\n  if (theme === \"dark\") document.body.style.backgroundColor = \"#212529\";\r\n  if (theme === \"light\") document.body.style.backgroundColor = \"white\";\r\n\r\n  const fetchAllCountries = async () => {\r\n    const responce = await fetch(`https://coronavirus-19-api.herokuapp.com/countries/`);\r\n    const allCountriesJSON = await responce.json();\r\n    setAllCountries((s) => (s = allCountriesJSON));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllCountries();\r\n    fetchWorldData();\r\n  }, []);\r\n\r\n  const fetchData = async (searchQuery: string) => {\r\n    const parsed = searchQuery.replace(/\\s+/g, \"%20\");\r\n    const responce = await fetch(`https://coronavirus-19-api.herokuapp.com/countries/${parsed}`);\r\n    const countryDataJSON = await responce.json();\r\n    setCountryData((s) => (s = countryDataJSON));\r\n  };\r\n\r\n  const fetchWorldData = async () => {\r\n    const responce = await fetch(`https://coronavirus-19-api.herokuapp.com/countries/world`);\r\n    const worldDataJSON = await responce.json();\r\n    setWorldData((s) => (s = worldDataJSON));\r\n  };\r\n\r\n  const changeThemeState = (sliderTheme: string) => {\r\n    console.log(theme, sliderTheme, \"before\");\r\n    if (sliderTheme === \"dark\") setTheme((s) => (s = \"dark\"));\r\n    if (sliderTheme === \"light\") setTheme((s) => (s = \"light\"));\r\n    console.log(theme, sliderTheme, \"after\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 style={{ position: \"fixed\", top: 100, left: 840 }} className={theme === \"dark\" ? \"light\" : \"dark\"}>\r\n        Corona Stats For: {countryData.country}\r\n      </h1>\r\n      <NavBar colorTheme={theme} onThemeChange={changeThemeState} />\r\n      <ListBox colorTheme={theme} allCountries={allCountries} onFetch={fetchData} />\r\n\r\n      <CardComponent colorTheme={theme} countryData={countryData} worldData={worldData} />\r\n\r\n      <SearchBar onFetch={fetchData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}